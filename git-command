## This file contain basic Git commands#####
git config --global user.name  <username> 	### To configure username
git config --global user.email  <email> 	### To configure email
git config --global user.name 			### Check the usename 
git config --global user.email 			### Check thr email.


git init 	### To initialize the git repository
git status 	### To check the status of working tree
           	### untracked - New file, not added to staging area.
           	### chaages to be commited 
           	### Nothing to commit, Working tree clean 
git add <intex.html) 	###  add file to staging area. 
git add -A 		###  To add all files to staging area in one go. 
git commit -m "Relevant Message with Commit command" 	### Commit the code
git commit create-ami -m "Create AMI file again Added"  ### Only one file create-ami is commited 
git commit -a -m "Relevant Message with Commit command"  ### Add a file to staging and commit in a single command, this command will work post first add only
git checkout <file name> ###  working dir file is replaced with last commited file.
git checkout -f  ### All file in working dir is replaced with last commited files. 
git log    ### shows all last commits
git log -2 ### Shows only last 2 commits
git log -p -5 	### shows the last 5 commit and it will also show the details of changes  made in last 5 commit
git diff 	### working dir file will be compared wuth staging area file
git diff --staged ### staging area file will be compared with last commit
git rm <filename>  ### remove file from both place working directory and staged area. 
git rm --cached <filename>  ### remove file from staged area only

=========================================================================
touch .gitignore ### This file is used to ignore files you do not want to track
                 ### All files added in .gitignore will not be tracked.
                 ### *.log or /mylog.log or *.cpp  or /ignore  
=========================================================================

git branch  ### To display all brances 
git branch feature1 ### create a new branch with name feature1
git checkout feature1 ### To switch to feature1 branch 
git merge feature1 ### Feature1 branch will be merged with master
git ls-tree --name-only HEAD  ### command will show all files which are commited right now
git ls-tree --name-only -r <697442ac80428124d27afa69b574da45dbe58d4b> ### command will show all files which are commited at particular commit it
