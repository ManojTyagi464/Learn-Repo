
#!/bin/bash
########## Trigger AMI backup ######################################
echo "..........AMI Backup Started ....................."
truncate -s 0 /tmp/snapshot
for i in `cat instances`;
do
aws ec2 create-image --instance-id $i --name "AMI-VolConversion-$i-`date +"%d%b%Y"`" --no-reboot >> /tmp/snapshot 2>&1
done
cat /tmp/snapshot | grep error
if [ $? == 0 ]
then
echo "Issue with AMI creation Please check ....."
exit
fi
truncate -s 0 /tmp/ami-id
cat /tmp/snapshot | grep ami | awk '{print $2}' | sed 's/\"//g;s/\,//g' >> /tmp/ami-id
for j in `cat /tmp/ami-id`
do
istate=`aws ec2 describe-images --image-ids $j | grep State | awk '{print $2}' | sed 's/\"//g;s/\,//g'`
until [[ "$istate" == 'available' ]]
do
echo "AMI  $j is still running"
sleep 30
istate=`aws ec2 describe-images --image-ids $j | grep State | awk '{print $2}' | sed 's/\"//g;s/\,//g'`
done
echo "AMI  $j backup completed"
done
echo "...........ALL AMI backup completed successfully at `date`................"
####### Trigger Volume Conversion ###################################
echo " ..........Volume conversion started ....................."
truncate -s 0 /tmp/volume_info
for i in `cat instances`;
do
aws ec2 describe-instances --instance-ids $i | grep VolumeId | awk '{print $2}' | sed 's/\"//g;s/\,//g' >> /tmp/volume_info;
done
for j in `cat /tmp/volume_info`;
do
voltype=`aws ec2 describe-volumes --volume-ids $j | grep VolumeType | grep -v Key | awk '{print $2}' | sed 's/\"//g;s/\,//g'`
if [ $voltype == "gp2" ]
then
aws ec2 modify-volume --volume-id $j --volume-type gp3
else
echo "$j Volume Type is already $voltype, Conversion not Initaited"
fi
done
